/**
 * APLICACI√ìN PRINCIPAL - VERSI√ìN B√ÅSICA
 *
 * Solo maneja clicks en botones y actualizaci√≥n del localStorage
 */

// ========================================
// FUNCI√ìN PRINCIPAL
// ========================================

/**
 * FUNCI√ìN: Inicializar la aplicaci√≥n
 * ¬øQu√© hace? Configura los botones para que funcionen con localStorage
 */
function iniciarTienda() {
  console.log("üõçÔ∏è Tienda iniciada");

  // Configurar botones de agregar al carrito
  prepararBotones();
}

// ========================================
// MANEJO DE BOTONES
// ========================================

/**
 * FUNCI√ìN: Preparar todos los botones de "Agregar al carrito"
 * ¬øQu√© hace? Busca todos los botones y les asigna la funci√≥n de click
 */
function prepararBotones() {
  var botones = document.querySelectorAll("[data-product-id]");

  console.log("üîò Encontr√©", botones.length, "botones");

  // Para cada bot√≥n, le asignamos la funci√≥n
  for (var i = 0; i < botones.length; i++) {
    asignarFuncionAlBoton(botones[i]);
  }
}

/**
 * FUNCI√ìN: Asignar funci√≥n click a un bot√≥n
 * ¬øQu√© hace? Conecta el bot√≥n con la funci√≥n de agregar al carrito
 */
function asignarFuncionAlBoton(boton) {
  boton.onclick = function (evento) {
    evento.preventDefault();

    // Obtenemos el ID del producto
    var idProducto = this.getAttribute("data-product-id");

    console.log("üëÜ Click en producto:", idProducto);

    // Agregamos al carrito (actualiza localStorage)
    agregarProducto(idProducto);
  };
}

// ========================================
// INICIALIZACI√ìN
// ========================================

/**
 * Ejecutar cuando la p√°gina cargue completamente
 */
document.addEventListener("DOMContentLoaded", iniciarTienda);
